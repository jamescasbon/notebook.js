{"title":"Tutorial: first steps","id":"ed3fbe07-f31d-f917-2986-35628a1c82ae","cells":[{"input":"Welcome to notebook.js\n======================\n\nNotebook.js is a literate code editor for the browser. \nPresumably, you just opened this tutorial and are wondering how this works.\nYou are currently _viewing_ this notebook, but to have any fun you need to move to edit mode.\n\n**Click the button on the top right that says 'toggle edit/view'.**\n\nThe title should now say 'Tutorial: first steps Editing'.\n\nNow look down the page until you see a 'javascript' tab on the left hand side.  That tab marks the beginning of a _cell_.  You can see the cell has an input program that prints a friendly message and, beneath that, the output from the program.  You can click on the input and edit the program.  \n\n**Change the message inside the print function**.  At this point, the cell is ready to be evaluated and you should see a little play icon on the right hand side.  **Press the play icon to evaluate the cell.** Note you can also evalute with CTRL-e or CMD-e while editing the code.  \n\nCongratulations, you have created your first program with notebook.js.\n","type":"markdown","inputFold":true,"output":"<div class=\"raw\"><h1 id=\"welcometonotebookjs\">Welcome to notebook.js</h1>\n\n<p>Notebook.js is a literate code editor for the browser. \nPresumably, you just opened this tutorial and are wondering how this works.\nYou are currently <em>viewing</em> this notebook, but to have any fun you need to move to edit mode.</p>\n\n<p><strong>Click the button on the top right that says 'toggle edit/view'.</strong></p>\n\n<p>The title should now say 'Tutorial: first steps Editing'.</p>\n\n<p>Now look down the page until you see a 'javascript' tab on the left hand side.  That tab marks the beginning of a <em>cell</em>.  You can see the cell has an input program that prints a friendly message and, beneath that, the output from the program.  You can click on the input and edit the program.  </p>\n\n<p><strong>Change the message inside the print function</strong>.  At this point, the cell is ready to be evaluated and you should see a little play icon on the right hand side.  <strong>Press the play icon to evaluate the cell.</strong> Note you can also evalute with CTRL-e or CMD-e while editing the code.  </p>\n\n<p>Congratulations, you have created your first program with notebook.js.</p></div>","position":null,"error":null,"state":null,"id":"81de9256-5ab6-ed04-eacf-6d3a8d3c5a61"},{"input":"print('Hello world!')","type":"javascript","inputFold":false,"output":"<div class=\"print\">Hello world!</div><div class=\"print\">-</div>","position":65536,"error":null,"state":null,"id":"2b3c6136-3316-0614-7b3d-f0235cb179d1"},{"input":"Text and Code cells\n-------------------\n\nA document in notebook.js is a list of cells and we can weave text and code together by using cells of different types. This cell is a markdown cell.  Markdown is dialect of plain text.  You can change a cell's type by clicking the tab on the left hand side, or by hitting CTRL-m or CMD-m in the editor.\n\n**Click the blue tab saying javascript to the top left of the cell above change the type to markdown.**\n\nThe play button on the right should appear showing that you can evaluate this cell. \n\n**Try pressing the play button as a markdown cell.**\n\nThe output is no longer javscript, but markdown.  \n\nFolding cells\n-------------\n\nYou may be wondering how you can edit this text, since you cannot see an editor for this code.  That is because this cell is _folded_.  You can fold cells by \n \n * clicking on the little '>' at the top left of a cell, in the margin\n * double clicking on the output\n\n**Unfold this cell by clicking on the '>' by this cell in the left margin.**\n\nYou should see this text as raw markdown that you can edit, with the rendered markdown beneath it.  You evaluate a markdown cell in just the same way as a javascript cell, but the output is formatted text.\n\n\nAdding and removing cells\n-------------------------\n\nYou can add a cell by double clicking on the horizontal lines between the cells and at the start and end of the document.  Or you can press enter on the rule while highlighted.\n\n**Double click the rule below to add a cell to this document** \n\nYou should have an empty cell at the end of the document.  You can try evaluating some code in that cell.  To delete a cell, you press backspace inside the editor when the cell input is empty.\n\n**Delete any input and press backspace to remote the cell**.\n\n### Congratulations, you just completed the first tutorial!\n\nClick the 'notebook.js' logo in the top left to go back to the front page.\n","type":"markdown","inputFold":true,"output":"<div class=\"raw\"><h2 id=\"textandcodecells\">Text and Code cells</h2>\n\n<p>A document in notebook.js is a list of cells and we can weave text and code together by using cells of different types. This cell is a markdown cell.  Markdown is dialect of plain text.  You can change a cell's type by clicking the tab on the left hand side, or by hitting CTRL-m or CMD-m in the editor.</p>\n\n<p><strong>Click the blue tab saying javascript to the top left of the cell above change the type to markdown.</strong></p>\n\n<p>The play button on the right should appear showing that you can evaluate this cell. </p>\n\n<p><strong>Try pressing the play button as a markdown cell.</strong></p>\n\n<p>The output is no longer javscript, but markdown.  </p>\n\n<h2 id=\"foldingcells\">Folding cells</h2>\n\n<p>You may be wondering how you can edit this text, since you cannot see an editor for this code.  That is because this cell is <em>folded</em>.  You can fold cells by </p>\n\n<ul>\n<li>clicking on the little '>' at the top left of a cell, in the margin</li>\n<li>double clicking on the output</li>\n</ul>\n\n<p><strong>Unfold this cell by clicking on the '>' by this cell in the left margin.</strong></p>\n\n<p>You should see this text as raw markdown that you can edit, with the rendered markdown beneath it.  You evaluate a markdown cell in just the same way as a javascript cell, but the output is formatted text.</p>\n\n<h2 id=\"addingandremovingcells\">Adding and removing cells</h2>\n\n<p>You can add a cell by double clicking on the horizontal lines between the cells and at the start and end of the document.  Or you can press enter on the rule while highlighted.</p>\n\n<p><strong>Double click the rule below to add a cell to this document</strong> </p>\n\n<p>You should have an empty cell at the end of the document.  You can try evaluating some code in that cell.  To delete a cell, you press backspace inside the editor when the cell input is empty.</p>\n\n<p><strong>Delete any input and press backspace to remote the cell</strong>.</p>\n\n<h3 id=\"congratulationsyoujustcompletedthefirsttutorial\">Congratulations, you just completed the first tutorial!</h3>\n\n<p>Click the 'notebook.js' logo in the top left to go back to the front page.</p></div>","position":131072,"error":null,"state":null,"id":"ebb982cc-15f5-3abc-57dc-8b16d70381ad"}]}
